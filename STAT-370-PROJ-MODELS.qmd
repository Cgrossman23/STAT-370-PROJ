---
title: "STAT-370-PROJ-MODELING"
author: "William Quinn"
format: html
editor: visual
---

# Libraries {.appendix}

```{r}
library(RCurl)
library(janitor)
library(dplyr)
library(car)
library(flexplot)
library(MASS)

#mixed model libraries
library(lme4)
library(HLMdiag)
library(flexplot)

#geographic regression libraries
library(spdep)

#for zero inflated
library(pscl)

```

# Importing {.appendix}

```{r}
data_link <- getURL("https://raw.githubusercontent.com/Cgrossman23/STAT-370-PROJ/refs/heads/main/cleaned_data.csv") 
wave <- read.csv(text = EDA_GIT_LINK)

# make all var undercase

wave <- clean_names(wave)

# renaming response variables to better names

colnames(wave)[7] <- "presence_absence_sch"
colnames(wave)[8] <- "density_sch"
colnames(wave)[9] <- "presence_absence_typ"
colnames(wave)[10] <- "density_typ"
names(wave)
```

# Structure Reference

```{r}
#| echo: false
names(wave)

wave[, c(1,2,7:15)] <- lapply(wave[, c(1,2,7:15)], function(x) gsub("[^0-9.]", "", x))
wave[, c(1,2,7:15)] <- lapply(wave[, c(1,2,7:15)], as.numeric)

str(wave)

unique(wave$transect) 
unique(wave$site_combined) 
unique(wave$site_individual)
unique(wave$exposure)
```

## NA Assess

```{r}
#| echo: false 
rows_with_na <- wave[!complete.cases(wave), ] 
print(rows_with_na)  
unique(rows_with_na$site_combined)
wave <- na.omit(wave)
```

## Summarizing Response Variables

```{r}
#| echo: false 

wave$presence_absence <- (wave$presence_absence_sch + wave$presence_absence_typ)
wave$density <- (wave$density_sch + wave$density_typ)

wave <- wave %>% mutate(plant_type = case_when( 
                presence_absence_typ ==  1 ~ "typ", 
                presence_absence_sch == 1 ~ "sch", 
                TRUE ~ NA_character_ ))
```

## Filter for Unexposed and Site

```{r}
wave2 <- wave %>% filter(exposure == "Unexposed")
wave_a <- wave2 %>% filter(site_combined == "A")
wave_b <- wave2 %>% filter(site_combined == "B")
wave_c <- wave2 %>% filter(site_combined == "C")
wave_d <- wave2 %>% filter(site_combined == "D")
```

# Geographical Correlation

## Site A

```{r}
coords_a <- cbind(wave_a$latitude, wave_a$longitude)

distances <- seq(0.000001, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi_a <- -Inf  
od_a <- NA
neighbors_a <- NULL
weights_a <- NULL
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_a, d1 = 0, d2 = distances[i]) #insert cords
  if (sum(card(neighbors)) == 0) { next }
  dists <- nbdists(neighbors, coords_a) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_a$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi_a) {
    mmi_a <- values[i]
    od_a <- distances[i]
    neighbors_a <- neighbors
    weights_a <- weights
  }
}
cat("Maximum Moran's I:", mmi_a, "\n")
cat("Optimal Distance:", od_a, "\n")

plot(neighbors_a,coords_a, col = "red")
```

## Site B

```{r}
coords_b <- cbind(wave_b$latitude, wave_b$longitude)
  
distances <- seq(0.00012, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi_b <- -Inf  
od_b <- NA
neighbors_b <- NULL
weights_b <- NULL
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_b, d1 = 0, d2 = distances[i]) #insert cords
  if (sum(card(neighbors)) == 0) { next }
  dists <- nbdists(neighbors, coords_b) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_b$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi_b) {
    mmi_b <- values[i]
    od_b <- distances[i]
    neighbors_b <- neighbors
    weights_b <- weights
  }
}
cat("Maximum Moran's I:", mmi_b, "\n")
cat("Optimal Distance:", od_b, "\n")

plot(neighbors_b,coords_b, col = "red")
```

## Site C

```{r}
coords_c <- cbind(wave_c$latitude, wave_c$longitude)
  
distances <- seq(0.000001, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi_c <- -Inf  
od_c <- NA
neighbors_c <- NULL
weights_c <- NULL
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_c, d1 = 0, d2 = distances[i]) #insert cords
  if (sum(card(neighbors)) == 0) { next }
  dists <- nbdists(neighbors, coords_c) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_c$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi_c) {
    mmi_c <- values[i]
    od_c <- distances[i]
    neighbors_c <- neighbors
    weights_c <- weights
  }
}
cat("Maximum Moran's I:", mmi_c, "\n")
cat("Optimal Distance:", od_c, "\n")

plot(neighbors_c,coords_c, col = "red")
```

## Site D

```{r}
wave_d$coords_d <- cbind(wave_d$latitude, wave_d$longitude)

distances <- seq(0.00012, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi_d <- -Inf  
od_d <- NA
neighbors_d <- NULL
weights_d <- NULL
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_d, d1 = 0, d2 = distances[i]) #insert cords
  if (sum(card(neighbors)) == 0) { next }
  dists <- nbdists(neighbors, coords_d) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_d$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi_d) {
    mmi_d <- values[i]
    od_d <- distances[i]
    neighbors_d <- neighbors
    weights_d <- weights
  }
}
cat("Maximum Moran's I:", mmi_d, "\n")
cat("Optimal Distance:", od_d, "\n")

plot(neighbors_d,coords_d, col = "red")
```

# Geographic correlation vs Linear Model or ZIM

## Linear

### Models

```{r}
f=density~fetch_projected*water_depth*slope_use
sqrt_f=sqrt(density)~fetch_projected*water_depth*slope_use
cbrt_f <- I(density^(1/3)) ~ fetch_projected*water_depth*slope_use
quad_f <- I(density^(1/4)) ~ fetch_projected*water_depth*slope_use
log_f <- log(density+1) ~ fetch_projected*water_depth*slope_use
```

### Site A

```{r}
model_a <- lm(f , data = wave_a)

summary(model_a) # not significant

plot(resid(model_a) ~ fitted(model_a), main = "Residuals vs Fitted Site A", xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red", lty = 2)

qqnorm(resid(model_a))
qqline(resid(model_a), col = "red", lty = 2)

lm.morantest(model_a , weights_a) # significant for: log, sqrt, cbrt

lm.RStests(model_a , weights_a, test = "all")
```

### Site B

```{r}
model_b1 <- lm(f , data = wave_b)
model_b2 <- lm(sqrt_f , data = wave_b)
model_b3 <- lm(cbrt_f , data = wave_b)
model_b4 <- lm(quad_f , data = wave_b)
model_blog <- lm(log_f , data = wave_b)

step_model_b1 <- stepAIC(model_b1, direction = "both", trace = FALSE)
step_model_b2 <- stepAIC(model_b2, direction = "both", trace = FALSE)
step_model_b3 <- stepAIC(model_b3, direction = "both", trace = FALSE)
step_model_b4 <- stepAIC(model_b4, direction = "both", trace = FALSE)
step_model_blog <- stepAIC(model_blog, direction = "both", trace = FALSE)

AIC(step_model_b1)
AIC(step_model_b2)
AIC(step_model_b3) # best model
AIC(step_model_b4) # best model

AIC(step_model_blog)

summary(model_b3) # significant

plot(resid(model_b) ~ fitted(model_b), main = "Residuals vs Fitted Site B", xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red", lty = 2)

qqnorm(resid(model_b))
qqline(resid(model_b), col = "red", lty = 2)

lm.morantest(model_b , weights_b)

lm.RStests(model_b , weights_b, test = "all")
```

### Site C

```{r}
model_c1 <- lm(f , data = wave_c)
model_c2 <- lm(sqrt_f , data = wave_c)
model_c3 <- lm(cbrt_f , data = wave_c)
model_clog <- lm(log_f , data = wave_c)

step_model_c1 <- stepAIC(model_c1, direction = "both", trace = FALSE)
step_model_c2 <- stepAIC(model_c2, direction = "both", trace = FALSE)
step_model_c3 <- stepAIC(model_c3, direction = "both", trace = FALSE)
step_model_clog <- stepAIC(model_clog, direction = "both", trace = FALSE)

AIC(step_model_c1)
AIC(step_model_c2)
AIC(step_model_c3) # best model
AIC(step_model_clog)

summary(model_c3) # significant

plot(resid(model_c) ~ fitted(model_c), main = "Residuals vs Fitted Site C", xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red", lty = 2)

qqnorm(resid(model_c))
qqline(resid(model_c), col = "red", lty = 2)

lm.morantest(model_c , weights_c) # insignificant

lm.RStests(model_c , weights_c, test = "all")
```

### Site D

```{r}
model_d <- lm(log_f , data = wave_d)

summary(model_d) # significant

plot(resid(model_d) ~ fitted(model_d), main = "Residuals vs Fitted Site D", xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red", lty = 2)

qqnorm(resid(model_d))
qqline(resid(model_d), col = "red", lty = 2)

lm.morantest(model_d , weights_d) # almost significant

lm.RStests(model_d , weights_d, test = "all")
```

## ZIM

### Site A

### Site B

```{r}
model_zero_b <- zeroinfl(density ~ fetch_projected , data = wave_b, dist="negbin")

estimates(model_zero_b)
summary(model_zero_b)

resid_b <- residuals(model_zero_b)

moran_resid_test <- moran.test(resid_b, weights_b)

print(moran_resid_test)
```

### Site C

```{r}
model_zero_c1 <- zeroinfl(density ~ fetch_projected , data = wave_c, dist="negbin")

estimates(model_zero_c1)
summary(model_zero_c1)

resid_c <- residuals(model_zero_c1)

moran_resid_test <- moran.test(resid_c, weights_c)

print(moran_resid_test)
```

### Site D

```{r}
table(wave_d$density)

unique(sort(round(log(wave_d$density+1))))
unique(sort(round(log(wave_d$density+1)*10)))
unique(sort(wave_d$density))

wave_d$log_density <- round(log(wave_d$density+1)*10)

table(wave_d$log_density)

model_zero_d1 <- zeroinfl(log_density ~ fetch_projected , data = wave_d, dist="negbin")

estimates(model_zero_d1)

resid_d <- residuals(model_zero_d1)

moran_resid_test <- moran.test(resid_d, weights_d1)

print(moran_resid_test)
```

## Baseline

```{r}

model1 <- lmer(density ~
                        1
                        + (1 | site_combined),
                        data = wave2)

icc(model1)
# 4.3% of variance due to clustering between sites
```

## Cost

```{r}
model2 <- lmer(density ~
                        cost_small
                        + (1 | site_combined),
                        data = wave2)

model3 <- lmer(density ~
                        cost_small
                        + (cost_small | site_combined),
                        data = wave2)

visualize(model3, plot="model")
```
