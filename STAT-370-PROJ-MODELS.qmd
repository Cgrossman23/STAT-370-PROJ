---
title: "STAT-370-PROJ-MODELING"
author: "William Quinn"
format: html
editor: visual
---

# Libraries {.appendix}

```{r}
library(RCurl)
library(janitor)
library(dplyr)

#mixed model libraries
library(lme4)
library(HLMdiag)
devtools::install_github("dustinfife/flexplot")
library(flexplot)

#geographic regression libraries
library(spdep)



```

# Importing {.appendix}

```{r}
data_link <- getURL("https://raw.githubusercontent.com/Cgrossman23/STAT-370-PROJ/refs/heads/main/cleaned_data.csv") 
wave <- read.csv(text = EDA_GIT_LINK)

# make all var undercase

wave <- clean_names(wave)

# renaming response variables to better names

colnames(wave)[7] <- "presence_absence_sch"
colnames(wave)[8] <- "density_sch"
colnames(wave)[9] <- "presence_absence_typ"
colnames(wave)[10] <- "density_typ"
names(wave)
```

# Structure Reference

```{r}
#| echo: false
names(wave)

wave[, c(1,2,7:15)] <- lapply(wave[, c(1,2,7:15)], function(x) gsub("[^0-9.]", "", x))
wave[, c(1,2,7:15)] <- lapply(wave[, c(1,2,7:15)], as.numeric)

str(wave)

unique(wave$transect) 
unique(wave$site_combined) 
unique(wave$site_individual)
unique(wave$exposure)
```

## NA Assess

```{r}
#| echo: false 
rows_with_na <- wave[!complete.cases(wave), ] 
print(rows_with_na)  
unique(rows_with_na$site_combined)
wave <- na.omit(wave)
```

## Summarizing Response Variables

```{r}
#| echo: false 

wave$presence_absence <- (wave$presence_absence_sch + wave$presence_absence_typ)
wave$density <- (wave$density_sch + wave$density_typ)

wave <- wave %>% mutate(plant_type = case_when( 
                presence_absence_typ ==  1 ~ "typ", 
                presence_absence_sch == 1 ~ "sch", 
                TRUE ~ NA_character_ ))
```

## Filter for Unexposed and Site

```{r}
wave2 <- wave %>% filter(exposure == "Unexposed")
wave_a <- wave2 %>% filter(site_combined == "A")
wave_b <- wave2 %>% filter(site_combined == "B")
wave_c <- wave2 %>% filter(site_combined == "C")
wave_d <- wave2 %>% filter(site_combined == "D")
```

# Geographical Correlation

## Site A

```{r}
coords_a <- cbind(wave_a$latitude, wave_a$longitude)

distances <- seq(0.000001, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi <- -Inf  
od <- NA
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_a, d1 = 0, d2 = distances[i]) #insert cords
  if (length(neighbors) == 0) { next }
  dists <- nbdists(neighbors, coords_a) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_a$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi) {
    mmi <- values[i]
    od <- distances[i]
  }
}
cat("Maximum Moran's I:", mmi, "\n")
cat("Optimal Distance:", od, "\n")

neighbors <- dnearneigh(coords_a, d1 = 0, d2 = od)

plot(neighbors,coords_a, col = "red")

```

## Site B

```{r}
coords_b <- cbind(wave_b$latitude, wave_b$longitude)
  
distances <- seq(0.00012, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi <- -Inf  
od <- NA
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_b, d1 = 0, d2 = distances[i]) #insert cords
  if (length(neighbors) == 0) { next }
  dists <- nbdists(neighbors, coords_b) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_b$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi) {
    mmi <- values[i]
    od <- distances[i]
  }
}
cat("Maximum Moran's I:", mmi, "\n")
cat("Optimal Distance:", od, "\n")

neighbors_b <- dnearneigh(coords_b, d1 = 0, d2 = od)

plot(neighbors_b,coords_b, col = "red")

site_b <- nb2listw(neighbors_b, zero.policy = TRUE)
```

## Site C

```{r}
coords_c <- cbind(wave_c$latitude, wave_c$longitude)
  
distances <- seq(0.00001, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi <- -Inf  
od <- NA
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_c, d1 = 0, d2 = distances[i]) #insert cords
  if (length(neighbors) == 0) { next }
  dists <- nbdists(neighbors, coords_c) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_c$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi) {
    mmi <- values[i]
    od <- distances[i]
  }
}
cat("Maximum Moran's I:", mmi, "\n")
cat("Optimal Distance:", od, "\n")

neighbors <- dnearneigh(coords_c, d1 = 0, d2 = od)

plot(neighbors,coords_c, col = "red")

```

## Site D

```{r}
coords_d <- cbind(wave_d$latitude, wave_d$longitude)

distances <- seq(0.00001, 0.001, by = 0.000001)
values <- numeric(length(distances))
values[] <- NA  
mmi <- -Inf  
od <- NA
options(warn = -1)
for (i in seq_along(distances)) {
  neighbors <- dnearneigh(coords_d, d1 = 0, d2 = distances[i]) #insert cords
  if (length(neighbors) == 0) { next }
  dists <- nbdists(neighbors, coords_d) # and here
  weights <- nb2listw(neighbors, 
                        glist = lapply(dists, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  moran_results <- moran(wave_c$density, weights, length(neighbors), Szero(weights)) #insert density here
  values[i] <- moran_results$I
  
  if (!is.na(values[i]) && values[i] > mmi) {
    mmi <- values[i]
    od <- distances[i]
  }
}
cat("Maximum Moran's I:", mmi, "\n")
cat("Optimal Distance:", od, "\n")

neighbors_d <- dnearneigh(coords_d, d1 = 0, d2 = od)

plot(neighbors_d,coords_d, col = "red")

site_d <- nb2listw(neighbors_d, zero.policy = TRUE)
```

# Models

## Geographic Residuals

```{r}
f=density~cost_small

model_a <- lm(f , data = wave_a)
model_b <- lm(f , data = wave_b)
model_c <- lm(f , data = wave_c)
model_d <- lm(f , data = wave_d)
summary(model_a) # not significant
summary(model_b) # significant
summary(model_c) # not significant
summary(model_d) # significant

lm.morantest(model_b , site_b)
lm.morantest(model_d , site_d)

lm.LMtests(model_b , site_b, test = "all")
lm.LMtests(model_d , site_d, test = "all")


```

## Baseline

```{r}

model1 <- lmer(density ~
                        1
                        + (1 | site_combined),
                        data = wave2)

icc(model1)
# 4.3% of variance due to clustering between sites
```

## Cost

```{r}
model2 <- lmer(density ~
                        cost_small
                        + (1 | site_combined),
                        data = wave2)

model3 <- lmer(density ~
                        cost_small
                        + (cost_small | site_combined),
                        data = wave2)

visualize(model3, plot="model")
```
