---
title: "STAT-370-PROJ-MODELING"
author: "William Quinn"
format: html
editor: visual
---

# Libraries {.appendix}

```{r}
library(RCurl)
library(janitor)
library(dplyr)

#mixed model libraries
library(lme4)
library(HLMdiag)
devtools::install_github("dustinfife/flexplot")
library(flexplot)

#geographic regression libraries
library(spdep)



```

# Importing {.appendix}

```{r}
data_link <- getURL("https://raw.githubusercontent.com/Cgrossman23/STAT-370-PROJ/refs/heads/main/cleaned_data.csv") 
wave <- read.csv(text = EDA_GIT_LINK)

# make all var undercase

wave <- clean_names(wave)

# renaming response variables to better names

colnames(wave)[7] <- "presence_absence_sch"
colnames(wave)[8] <- "density_sch"
colnames(wave)[9] <- "presence_absence_typ"
colnames(wave)[10] <- "density_typ"
names(wave)
```

# Structure Reference

```{r}
#| echo: false
names(wave)

wave[, c(1,2,7:15)] <- lapply(wave[, c(1,2,7:15)], function(x) gsub("[^0-9.]", "", x))
wave[, c(1,2,7:15)] <- lapply(wave[, c(1,2,7:15)], as.numeric)

str(wave)

unique(wave$transect) 
unique(wave$site_combined) 
unique(wave$site_individual)
unique(wave$exposure)
```

## NA Assess

```{r}
#| echo: false 
rows_with_na <- wave[!complete.cases(wave), ] 
print(rows_with_na)  
unique(rows_with_na$site_combined)
wave <- na.omit(wave)
```

## Summarizing Response Variables

```{r}
#| echo: false 

wave$presence_absence <- (wave$presence_absence_sch + wave$presence_absence_typ)
wave$density <- (wave$density_sch + wave$density_typ)

wave <- wave %>% mutate(plant_type = case_when( 
                presence_absence_typ ==  1 ~ "typ", 
                presence_absence_sch == 1 ~ "sch", 
                TRUE ~ NA_character_ ))
```

## Filter for Unexposed and Site

```{r}
wave2 <- wave %>% filter(exposure == "Unexposed")
wave_a <- wave2 %>% filter(site_combined == "A")
wave_b <- wave2 %>% filter(site_combined == "B")
wave_c <- wave2 %>% filter(site_combined == "C")
wave_d <- wave2 %>% filter(site_combined == "D")
```

# Geographical Correlation

## Site A

```{r}
coords_a <- cbind(wave_a$latitude, wave_a$longitude)

distances_a <- seq(0.000085, 0.000095, by = 0.000001)

values_a <- numeric(length(distances_a))

for (i in seq_along(distances_a)) {

  neighbors_a <- dnearneigh(coords_a, d1 = 0, d2 = distances_a[i])
  
  if (length(neighbors_a) == 0) {next}
  
  dists_a <- nbdists(neighbors_a, coords_a)
  
  weights_a <- nb2listw(neighbors_a, 
                        glist = lapply(dists_a, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  
  moran_results <- moran(wave_a$density, weights_a, length(neighbors_a), Szero(weights_a))

  values_a[i] <- moran_results$I
  }

values_a

options(scipen = 999)
plot(distances_a, values_a, type = "b", pch = 19, col = "blue", ylim = range(.2, .4), xlab = "Max Distance", ylab = "Moran's I", main = "Optimizing Distance for Spatial Autocorrelation")

# maximizing value is a distance of 0.000087

neighbors_a <- dnearneigh(coords_a, d1 = 0, d2 = 0.000087)
  
plot(neighbors_a, wave_a$coords, col = "red")

dists_a <- nbdists(neighbors_a, coords_a)
  
weights_a <- nb2listw(neighbors_a, 
                        glist = lapply(dists_a, function(x) 1 / x), 
                        style = "W", 
                        zero.policy = TRUE)
  
moran_results_a <- moran(wave_a$density, weights_a, length(neighbors_a), Szero(weights_a))

moran_results_a
```

## Site B

```{r}
wave_b$coords <- cbind(wave_b$latitude, wave_b$longitude)
  
wave_b$knn_nb <- knn2nb(knearneigh(wave_b$coords, k = 2))

plot(wave_b$knn_nb, wave_b$coords, col = "red")

weights <- nb2listw(wave_b$knn_nb, style = "W")

moran(wave_b$density, weights, length(wave_b$knn_nb), Szero(weights))

# 0.1537179

```

## Site C

```{r}
wave_c$coords <- cbind(wave_c$latitude, wave_c$longitude)
  
wave_c$knn_nb <- knn2nb(knearneigh(wave_c$coords, k = 2))

plot(wave_c$knn_nb, wave_c$coords, col = "red")

weights <- nb2listw(wave_c$knn_nb, style = "W")

moran(wave_c$density, weights, length(wave_c$knn_nb), Szero(weights))
# 0.3214291

```

## Site D

```{r}
wave_d$coords <- cbind(wave_d$latitude, wave_d$longitude)
  
wave_d$knn_nb <- knn2nb(knearneigh(wave_d$coords, k = 2))

plot(wave_d$knn_nb, wave_d$coords, col = "red")

weights <- nb2listw(wave_d$knn_nb, style = "W")

moran(wave_d$density, weights, length(wave_d$knn_nb), Szero(weights))
# 0.7711229

```

# Models

## Baseline

```{r}

model1 <- lmer(density ~
                        1
                        + (1 | site_combined),
                        data = wave2)

icc(model1)
# 4.3% of variance due to clustering between sites
```

## Cost

```{r}
model2 <- lmer(density ~
                        cost_small
                        + (1 | site_combined),
                        data = wave2)

model3 <- lmer(density ~
                        cost_small
                        + (cost_small | site_combined),
                        data = wave2)

visualize(model3, plot="model")
```
